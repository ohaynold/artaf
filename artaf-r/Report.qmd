---
title: "Autoregressive Behavior of Aviation Weather Forecasts"
author: "Oliver M. Haynold & Neal Ylitalo"
date: "`r Sys.Date()`"
output: pdf_document
format:
  pdf:
    fig-width: 7
    fig-height: 4.5
crossref:
  fig-title: Figure
  fig-prefix: Figure
  fig-labels: arabic
  appendix-title: "Appendix:"
  appendix-delim: ":"
  sec-prefix: ""
toc: true
lof: true
lot: true
number-sections: true
number-depth: 3
font-size: 10
params:
  data_set: "full_set"
tbl-cap-location: bottom
---

```{r setup, include=FALSE}
library(spatstat)
library(readr)
library(dplyr)
library(ggplot2)
library(usmap)
library(palettes)
library(knitr)
library(tidyr)
library(broom)

# renv::snapshot()

knitr::opts_chunk$set(echo = FALSE)
```

```{r load_data}
lines <- read_csv(file.path("../data/histograms/",params$data_set ,"/hist YearlyStations.csv.zip"),
                  col_types = cols(
                    aerodrome = "f",
                    year="i",
                    variable="f",
                    previous="n",
                    current="n",
                    final="n",
                    count="i"
                  ))

stations <- read_csv("../config/stations.csv", 
                     col_types = cols(
                       station = "f",
                       name = "c",
                       latitude = "n",
                       longitude = "n",
                       center = "f"
                     )) %>%
              rename(aerodrome=station) %>%
              select(-center)
```

`r if(params$data_set!="full_set"){paste("**This report has been generated for the incomplete data set ", params$data_set, ".**", sep="")}`


# Research Problem

TODO

# Analysis

TODO

# Results

TODO

# Detailed Data Analysis {.appendix}

## Wind Speed without Gusts

### Summary Statistics

```{r load_wind_speed}
  wind_speed_hist <- lines %>% 
      filter(variable=="wind_speed") %>%
      group_by(current) %>%
      summarize(count=sum(count)) %>%
      ungroup()
```

##### Histogram

Wind speeds are forecast at an average of
`r sprintf("%.1f", weighted.mean(wind_speed_hist$current, wind_speed_hist$count))`
knots.

```{r wind_speed_hist}
#| fig-cap: Histogram of Wind Speeds
 print(
   ggplot(wind_speed_hist, aes(x=current)) + 
     geom_histogram(aes(weight=count), binwidth = 1) +
     labs(title="Histogram of Wind Speeds", x="Wind Speed kts", y="Count") +
     coord_cartesian(xlim=c(0,50)) +
     theme_bw()
   )
```

{{< pagebreak >}}
##### Extreme values

For wind speeds exceeding 10 knots, we see an exponential decay in their frequency 
of being forecast, albeit with a distinct clustering around round numbers. However,
that relationship breaks down for the very small number of predictions exceeding 50 knots.

```{r wind_speed_hist_log, warning=FALSE}
#| fig-cap: Histogram of Wind Speeds, log scale
# Warning for zero counts giving negative infinity suppressed
 print(
   ggplot(wind_speed_hist %>% filter(current >= 10), aes(x=current)) + 
     geom_histogram(aes(weight=count), binwidth = 1) +
     labs(title="Histogram of Wind Speeds", x="Wind Speed kts", y="Count") +
     scale_y_log10() +
     theme_bw()
   )
```

{{< pagebreak >}}
##### By location

By station location, we see the well-known wind corridor from the Dakotas to West Texas.

```{r wind_speed_map}
#| fig-cap: Average Wind Forecast Speed by Location
wind_speed_avg <- lines %>% 
      filter(variable=="wind_speed") %>%
      group_by(aerodrome) %>%
      summarize(current=weighted.mean(current, count)) %>%
      ungroup() %>%
      left_join(stations, by=c("aerodrome")) %>%
      filter(substr(aerodrome, 1, 1)=="K" | substr(aerodrome, 1, 2)=="PA" | substr(aerodrome, 1, 2)=="PH") 


plot_usmap(fill="grey") +
  geom_sf(data=usmap_transform(wind_speed_avg, input_names = c("longitude", "latitude")),
             aes(colour=current)) +
  scale_colour_gradientn(colours = heat.colors(10)) +
  labs(title = "Average Wind Forecast Speed by Location", colour="Knots")
```

The windiest airports, by prediction, are:

```{r wind_speed_max_stations}
#| tbl-cap: Aerodromes with the highest predicted average wind speeds
kable(head(
  wind_speed_avg %>% 
  arrange(-current) %>% 
  rename(average_wind = current) %>% 
  select(aerodrome, name, average_wind)),
  col.names = c("Aerodrome", "Name", "Average wind, kts"),
  digits = 1)
```

{{< pagebreak >}}
### Autocorrelation

##### Overall

Reductions in predicted wind speeds do not tend to get revised, but increases
mostly get revised:

```{r wind_speed_autocorr, warning=FALSE}
#| fig-cap: Changes in predicted wind speed vs. realization
wind_speed_autocorr <- lines %>%
  filter(variable=="wind_speed") %>%
  filter(previous <= 30, current <= 30, final <= 30) %>%
  mutate(change_from_previous=current-previous, change_to_final=final-current) %>%
  group_by(change_from_previous, change_to_final) %>%
  summarise(count=sum(count), .groups="drop")


print(
  ggplot(wind_speed_autocorr, aes(x=factor(change_from_previous, levels=-30:30), y=change_to_final, weight=count)) +
    geom_boxplot() +
    theme_bw() +
    labs(
      title="Changes in predicted wind speed vs. realization",
      x="Change in predicted wind speed, knots",
         y="Change from prediction to final value, knots") +
    geom_abline(slope=-1, intercept=31, linetype=4) +
    scale_x_discrete(breaks=c(-30,-25,-20,-15,-10,-5,0,5,10,15,20,25,30), drop=FALSE)
)

```

We see a significantly larger effect size for the reversion of increases in predicted wind speeds than for decreases:

```{r wind_speed_autocorr_lm}
wind_speed_autocorr <- wind_speed_autocorr %>%
  mutate(change_increase=pmax(change_from_previous, 0),
         change_decrease=pmin(change_from_previous, 0))

wind_speed_lm <- lm(change_to_final ~ change_increase + change_decrease + 0, weights = count, data=wind_speed_autocorr)
summary(wind_speed_lm)
```
{{< pagebreak >}}
#### By year

It appears that there is no significant change in autocorrelation patterns over the years:

```{r wind_speed_autocorr_year, warning=FALSE}
#| fig-cap: Changes in predicted wind speed vs. realization by year
#| fig-width: 10
#| fig-height: 10
wind_speed_autocorr_year <- lines %>%
  filter(variable=="wind_speed") %>%
  filter(previous <= 30, current <= 30, final <= 30) %>%
  mutate(change_from_previous=current-previous, change_to_final=final-current) %>%
  group_by(year, change_from_previous, change_to_final) %>%
  summarise(count=sum(count), .groups="drop")


print(
  ggplot(wind_speed_autocorr_year, aes(x=factor(change_from_previous, levels=-30:30), y=change_to_final, weight=count)) +
    facet_wrap(~year) +
    geom_boxplot(outliers = FALSE) +
    theme_bw() +
    labs(
      title="Changes in predicted wind speed vs. realization",
      x="Change in predicted wind speed, knots",
         y="Change from prediction to final value, knots") +
    geom_abline(slope=-1, intercept=31, linetype=4) +
    scale_x_discrete(breaks=c(-30,-20,-10,0,10,20,30), drop=FALSE)
)
```

{{< pagebreak >}}
##### By location

We break down the tendency of changes in predicted wind speed to revert by aerodrome. We see some geographic clusters, though their meaning is not immediately obvious.

```{r wind_speed_autocorr_aerodrome_increase}
#| fig-cap: Reversion of Increases in Predicted Wind Speed by Aerodrome
#| fig-width: 5
#| fig-height: 3

wind_speed_autocorr_aerodrome <- lines %>%
  filter(variable=="wind_speed") %>%
  filter(previous <= 30, current <= 30, final <= 30) %>%
  mutate(change_from_previous=current-previous, change_to_final=final-current) %>%
  group_by(aerodrome, change_from_previous, change_to_final) %>%
  summarise(count=sum(count), .groups="drop") %>%
  mutate(change_increase=pmax(change_from_previous, 0),
         change_decrease=pmin(change_from_previous, 0)) %>%
  nest_by(aerodrome) %>%
  mutate(fitAerodrome = list(lm(change_to_final ~ change_increase + change_decrease + 0,weights = count,  data = data))) %>%
  reframe(tidy(fitAerodrome)) %>%
  left_join(stations, by=c("aerodrome")) %>%
  filter(substr(aerodrome, 1, 1)=="K" | substr(aerodrome, 1, 2)=="PA" | substr(aerodrome, 1, 2)=="PH") 

plot_usmap(fill="grey") +
  geom_sf(data=usmap_transform(wind_speed_autocorr_aerodrome %>% filter(term=="change_increase"), input_names = c("longitude", "latitude")),
             aes(colour=-estimate)) +
  scale_colour_gradientn(colours = heat.colors(10)) +
  labs(title = "Reversion of Increases in Predicted Wind Speed", colour="Reversion")

```

```{r wind_speed_autocorr_aerodrome_decrease}
#| fig-cap: Reversion of Decreases in Predicted Wind Speed by Aerodrome
#| fig-width: 5
#| fig-height: 3


plot_usmap(fill="grey") +
  geom_sf(data=usmap_transform(wind_speed_autocorr_aerodrome %>% filter(term=="change_decrease"), input_names = c("longitude", "latitude")),
             aes(colour=-estimate)) +
  scale_colour_gradientn(colours = heat.colors(10)) +
  labs(title = "Reversion of Decreases in Predicted Wind Speed", colour="Reversion")


```
{{< pagebreak >}}
#### Reversion of predicted increases vs. decreases

We do not see much correlation between reversionary tendencies for increases and decreases in predicted wind speed.

```{r wind_speed_autocorr_aerodrome_increase_decrease}
#| fig-cap: Reversion of predicted decrease vs. increase of wind speed by aerodrome

ggplot(
  wind_speed_autocorr_aerodrome %>%
    select(aerodrome, term, estimate) %>%
    pivot_wider(names_from = term, values_from = estimate),
  aes(x=-change_increase, y=-change_decrease, label=aerodrome)) +
  geom_text(size=I(2)) +
  theme_bw() +
  labs(title="Reversion of predicted decrease vs. increase of wind speed by aerodrome",
       x="Reversion of predicted increase",
       y="Reversion of predicted decrease")

```


{{< pagebreak >}}
## Wind Speed with Gusts

### Summary Statistics

#### Histogram

```{r load_wind_speed_gust}
  wind_speed_gust_hist <- lines %>% 
      filter(variable=="wind_speed_with_gust") %>%
      group_by(current) %>%
      summarize(count=sum(count)) %>%
      ungroup()
```

Wind speeds with gust are forecast at an average of
`r sprintf("%.1f", weighted.mean(wind_speed_gust_hist$current, wind_speed_gust_hist$count))`
knots.

We see an interesting distribution of wind speeds with gust with the typical exponential
decay interrupted between 13 and 25 knots, the proceeding as expected from 25 knots to
70 knots, and ceasing there:

```{r wind_speed_gust_hist}
#| fig-cap: Histogram of Wind Speeds with Gust
 print(
   ggplot(wind_speed_gust_hist, aes(x=current)) + 
     geom_histogram(aes(weight=count), binwidth = 1) +
     labs(title="Histogram of Wind Speeds with Gust", x="Wind Speed with Gust kts", y="Count") +
     coord_cartesian(xlim=c(0,50)) +
     theme_bw()
   )
```

{{< pagebreak >}}
#### Extreme values


```{r wind_speed_gust_hist_log, warning=FALSE}
#| fig-cap: Histogram of Wind Speeds, log scale
 print(
   ggplot(wind_speed_gust_hist %>% filter(current >= 10), aes(x=current)) + 
     geom_histogram(aes(weight=count), binwidth = 1) +
     labs(title="Histogram of Wind Speeds with Gust", x="Wind Speed with Gust kts", y="Count") +
     scale_y_log10() +
     theme_bw()
   )
```

{{< pagebreak >}}
##### By location

The geographical distribution is as expected.

```{r wind_speed_gust_map}
#| fig-cap: Average Wind Forecast Speed with Gust by Location
wind_speed_gust_avg <- lines %>% 
      filter(variable=="wind_speed_with_gust") %>%
      group_by(aerodrome) %>%
      summarize(current=weighted.mean(current, count)) %>%
      ungroup() %>%
      left_join(stations, by=c("aerodrome")) %>%
      filter(substr(aerodrome, 1, 1)=="K" | substr(aerodrome, 1, 2)=="PA" | substr(aerodrome, 1, 2)=="PH") 


plot_usmap(fill="grey") +
  geom_sf(data=usmap_transform(wind_speed_gust_avg, input_names = c("longitude", "latitude")),
             aes(colour=current)) +
  scale_colour_gradientn(colours = heat.colors(10)) +
  labs(title = "Average Wind Forecast Speed with Gust by Location", colour="Knots")
```


The windiest airports for winds including gusts, by prediction, are:

```{r wind_speed_gust_max_stations}
#| tbl-cap: Aerodromes with the highest predicted average wind speeds with gust
kable(head(
  wind_speed_gust_avg %>% 
  arrange(-current) %>% 
  rename(average_wind = current) %>% 
  select(aerodrome, name, average_wind)),
  col.names = c("Aerodrome", "Name", "Average wind with gust, kts"),
  digits = 1)
```

{{< pagebreak >}}
### Autocorrelation

##### Overall

Reductions in predicted wind speeds do not tend to get revised, but increases
mostly get revised:

```{r wind_speed_gust_autocorr, warning=FALSE}
#| fig-cap: Changes in predicted wind speed vs. realization
wind_speed_gust_autocorr <- lines %>%
  filter(variable=="wind_speed_with_gust") %>%
  filter(previous <= 30, current <= 30, final <= 30) %>%
  mutate(change_from_previous=current-previous, change_to_final=final-current) %>%
  group_by(change_from_previous, change_to_final) %>%
  summarise(count=sum(count), .groups="drop")


print(
  ggplot(wind_speed_gust_autocorr, aes(x=factor(change_from_previous, levels=-30:30), y=change_to_final, weight=count)) +
    geom_boxplot() +
    theme_bw() +
    labs(
      title="Changes in predicted wind speed with gust vs. realization",
      x="Change in predicted wind speed with gust, knots",
         y="Change from prediction to final value, knots") +
    geom_abline(slope=-1, intercept=31, linetype=4) +
    scale_x_discrete(breaks=c(-30,-25,-20,-15,-10,-5,0,5,10,15,20,25,30), drop=FALSE)
)

```

We see a significantly larger effect size for the reversion of increases in predicted wind speeds than for decreases:

```{r wind_speed_gust_autocorr_lm}
wind_speed_gust_autocorr <- wind_speed_gust_autocorr %>%
  mutate(change_increase=pmax(change_from_previous, 0),
         change_decrease=pmin(change_from_previous, 0))

wind_speed_gust_lm <- lm(change_to_final ~ change_increase + change_decrease + 0, weights = count, data=wind_speed_gust_autocorr)
summary(wind_speed_gust_lm)
```
{{< pagebreak >}}
#### By year

It appears that there is no significant change in autocorrelation patterns over the years:

```{r wind_speed_gust_autocorr_year, warning=FALSE}
#| fig-cap: Changes in predicted wind speed with gust vs. realization by year
#| fig-width: 10
#| fig-height: 10
wind_speed_gust_autocorr_year <- lines %>%
  filter(variable=="wind_speed_with_gust") %>%
  filter(previous <= 30, current <= 30, final <= 30) %>%
  mutate(change_from_previous=current-previous, change_to_final=final-current) %>%
  group_by(year, change_from_previous, change_to_final) %>%
  summarise(count=sum(count), .groups="drop")


print(
  ggplot(wind_speed_gust_autocorr_year, aes(x=factor(change_from_previous, levels=-30:30), y=change_to_final, weight=count)) +
    facet_wrap(~year) +
    geom_boxplot(outliers = FALSE) +
    theme_bw() +
    labs(
      title="Changes in predicted wind speed with gust vs. realization",
      x="Change in predicted wind speed with gust, knots",
         y="Change from prediction to final value, knots") +
    geom_abline(slope=-1, intercept=31, linetype=4) +
    scale_x_discrete(breaks=c(-30,-20,-10,0,10,20,30), drop=FALSE)
)
```

{{< pagebreak >}}
##### By location

There are some regional clusters for reversionary tendencies in predicted wind speed with gust, but their meaning is not immediately obvious.

```{r wind_speed_gust_autocorr_aerodrome_increase}
#| fig-cap: Reversion of Increases in Predicted Wind Speed with Gust by Aerodrome
#| fig-width: 5
#| fig-height: 3

wind_speed_gust_autocorr_aerodrome <- lines %>%
  filter(variable=="wind_speed_with_gust") %>%
  filter(previous <= 30, current <= 30, final <= 30) %>%
  mutate(change_from_previous=current-previous, change_to_final=final-current) %>%
  group_by(aerodrome, change_from_previous, change_to_final) %>%
  summarise(count=sum(count), .groups="drop") %>%
  mutate(change_increase=pmax(change_from_previous, 0),
         change_decrease=pmin(change_from_previous, 0)) %>%
  nest_by(aerodrome) %>%
  mutate(fitAerodrome = list(lm(change_to_final ~ change_increase + change_decrease + 0, weights = count, data = data))) %>%
  reframe(tidy(fitAerodrome)) %>%
  left_join(stations, by=c("aerodrome")) %>%
  filter(substr(aerodrome, 1, 1)=="K" | substr(aerodrome, 1, 2)=="PA" | substr(aerodrome, 1, 2)=="PH") 

plot_usmap(fill="grey") +
  geom_sf(data=usmap_transform(wind_speed_gust_autocorr_aerodrome %>% filter(term=="change_increase"), input_names = c("longitude", "latitude")),
             aes(colour=-estimate)) +
  scale_colour_gradientn(colours = heat.colors(10)) +
  labs(title = "Reversion of Increases in Predicted Wind Speed with Gust", colour="Reversion")

```

```{r wind_speed_gust_autocorr_aerodrome_decrease}
#| fig-cap: Reversion of Decreases in Predicted Wind Speed by Aerodrome
#| fig-width: 5
#| fig-height: 3


plot_usmap(fill="grey") +
  geom_sf(data=usmap_transform(wind_speed_gust_autocorr_aerodrome %>% filter(term=="change_decrease"), input_names = c("longitude", "latitude")),
             aes(colour=-estimate)) +
  scale_colour_gradientn(colours = heat.colors(10)) +
  labs(title = "Reversion of Decreases in Predicted Wind Speed with Gust", colour="Reversion")


```

{{< pagebreak >}}
#### Reversion of predicted increases vs. decreases


We do not see much correlation between reversionary tendencies for increases and decreases in predicted wind speed with gust.

```{r wind_speed_gust_autocorr_aerodrome_increase_decrease}
#| fig-cap: Reversion of predicted decrease vs. increase of wind speed with gust by aerodrome

ggplot(
  wind_speed_gust_autocorr_aerodrome %>%
    select(aerodrome, term, estimate) %>%
    pivot_wider(names_from = term, values_from = estimate),
  aes(x=-change_increase, y=-change_decrease, label=aerodrome)) +
  geom_text(size=I(2)) +
  theme_bw() +
  labs(title="Reversion of predicted decrease vs. increase of wind speed with gust by aerodrome",
       x="Reversion of predicted increase",
       y="Reversion of predicted decrease")

```



{{< pagebreak >}}
## Wind Speed Directional

### Summary Statistics

```{r load_wind_speed_directional}
  wind_speed_directional_hist <- lines %>% 
      filter(variable %in% c("wind_north", "wind_east")) %>%
      filter(!is.na(current)) %>%
      group_by(current) %>%
      summarize(count=sum(count)) %>%
      ungroup()
```

Northerly and easterly wind components are forecast at an average of
`r sprintf("%.1f", weighted.mean(abs(wind_speed_directional_hist$current), wind_speed_directional_hist$count))`
knots. Patterns are as for wind speed:

```{r wind_speed_directional_hist}
#| fig-cap: Histogram of Wind Speed Components
 print(
   ggplot(wind_speed_directional_hist, aes(x=abs(current))) + 
     geom_histogram(aes(weight=count), binwidth = 1) +
     labs(title="Histogram of Wind Speed Components", x="Wind Speed Component kts", y="Count") +
     coord_cartesian(xlim=c(0,50)) +
     theme_bw()
   )
```

```{r wind_speed_directional_hist_log, warning=FALSE}
#| fig-cap: Histogram of Wind Speed Components, log scale
 print(
   ggplot(wind_speed_directional_hist %>% filter(current >= 10), aes(x=current)) + 
     geom_histogram(aes(weight=count), binwidth = 1) +
     labs(title="Histogram of Wind Speed Components", x="Wind Speed Component kts", y="Count") +
     scale_y_log10() +
     theme_bw()
   )
```

{{< pagebreak >}}
### Autocorrelation

##### Overall

Once we take wind direction into account and look at northerly and easterly components of wind speed, the pattern we have seen above of a distinction between increases and decreases in wind speed largely disappears and becomes more symmetrical. This is to be expected as directional wind speed has a sign.

```{r wind_speed_directional_autocorr, warning=FALSE}
#| fig-cap: Changes in predicted wind speed component vs. realization
wind_speed_directional_autocorr <- lines %>%
  filter(variable %in% c("wind_north", "wind_east")) %>%
  filter(abs(previous) <= 30 & abs(current) <= 30 & abs(final) <= 30) %>%
  mutate(change_from_previous=current-previous, change_to_final=final-current) %>%
  filter(abs(change_from_previous) <= 30 & abs(change_to_final) <= 30 ) %>%
  group_by(change_from_previous, change_to_final) %>%
  summarise(count=sum(count), .groups="drop")


print(
  ggplot(wind_speed_directional_autocorr, aes(x=factor(change_from_previous, levels=-30:30), y=change_to_final, weight=count)) +
    geom_boxplot() +
    theme_bw() +
    labs(
      title="Changes in predicted wind speed component vs. realization",
      x="Change in predicted wind speed component, knots",
         y="Change from prediction to final value, knots") +
    geom_abline(slope=-1, intercept=31, linetype=4) +
    scale_x_discrete(breaks=c(-30,-25,-20,-15,-10,-5,0,5,10,15,20,25,30), drop=FALSE)
)

```

Thus, our reversionary tendency also becomes weaker as we cannot meaningfully distinguish increases and decreases when we take direction into account:

```{r wind_speed_directional_autocorr_lm}

wind_speed_directional_lm <- lm(change_to_final ~ change_from_previous + 0, weights = count, data=wind_speed_directional_autocorr)
summary(wind_speed_directional_lm)
```

{{< pagebreak >}}
## Lowest Cloud Layer

### Summary Statistics

```{r load_clouds_lowest}
  clouds_lowest_hist <- lines %>% 
      filter(variable == "clouds_lowest_base") %>%
      filter(!is.na(current)) %>%
      group_by(current) %>%
      summarize(count=sum(count)) %>%
      ungroup()
```

For the base of the lowest cloud layer, we see a mode for no clouds below 18,000 feet, which we show as 18,000 even for clear skies. Below that, we see a decline of prediction frequency with increasing altitude, with peaks at the round numbers of 10,000 feet and 15,000 feet.

```{r clouds_lowest_hist}
#| fig-cap: Histogram of Lowest Cloud Layer Base
 print(
   ggplot(clouds_lowest_hist, aes(x=abs(current))) + 
     geom_histogram(aes(weight=count), breaks=(-1:18) * 1000 + 500) +
     labs(title="Histogram of lowest cloud layer base", x="Lowest Cloud Layer Base, feet", y="Count") +
     theme_bw()
   )
```

In the geographic distribution, we are seeing a distinct cluster of few low clouds in the sunny Southwest. We are showing the median instead of the average since the top value of 18,000 that is also taken for clear skies is an arbitrary choice.

```{r clouds_lowest_map}
#| fig-cap: Median Cloud Altitude by Location
clouds_lowest_median <- lines %>% 
      filter(variable=="clouds_lowest_base") %>%
      group_by(aerodrome) %>%
      summarize(current=weighted.median(current, count)) %>%
      ungroup() %>%
      left_join(stations, by=c("aerodrome")) %>%
      filter(substr(aerodrome, 1, 1)=="K" | substr(aerodrome, 1, 2)=="PA" | substr(aerodrome, 1, 2)=="PH") 


plot_usmap(fill="grey") +
  geom_sf(data=usmap_transform(clouds_lowest_median, input_names = c("longitude", "latitude")),
             aes(colour=current)) +
  scale_colour_gradientn(colours = topo.colors(30)) +
  labs(title = "Median Lowest Cloud Layer Base by Location", colour="Feet")
```


{{< pagebreak >}}
## Ceiling


### Summary Statistics

```{r load_clouds_ceiling}
  clouds_ceiling_hist <- lines %>% 
      filter(variable == "clouds_ceiling") %>%
      filter(!is.na(current)) %>%
      group_by(current) %>%
      summarize(count=sum(count)) %>%
      ungroup()
```

For the ceiling, the pattern from the lowest cloud base repeats:

```{r clouds_ceiling_hist}
#| fig-cap: Histogram of Cloud Ceiling
 print(
   ggplot(clouds_ceiling_hist, aes(x=abs(current))) + 
     geom_histogram(aes(weight=count), breaks=(-1:18) * 1000 + 500) +
     labs(title="Histogram of cloud ceiling", x="Cloud Ceiling, feet", y="Count") +
     theme_bw()
   )
```


```{r clouds_ceiling_map}
#| fig-cap: Cloud Ceiling by Location
clouds_ceiling_median <- lines %>% 
      filter(variable=="clouds_ceiling") %>%
      group_by(aerodrome) %>%
      summarize(current=weighted.median(current, count)) %>%
      ungroup() %>%
      left_join(stations, by=c("aerodrome")) %>%
      filter(substr(aerodrome, 1, 1)=="K" | substr(aerodrome, 1, 2)=="PA" | substr(aerodrome, 1, 2)=="PH") 


plot_usmap(fill="grey") +
  geom_sf(data=usmap_transform(clouds_ceiling_median, input_names = c("longitude", "latitude")),
             aes(colour=current)) +
  scale_colour_gradientn(colours = topo.colors(30)) +
  labs(title = "Median Cloud Ceiling by Location", colour="Feet")
```


{{< pagebreak >}}
## Visibility

### Summary Statistics

```{r load_visibility}
  visibility_hist <- lines %>% 
      filter(variable == "visibility") %>%
      filter(!is.na(current)) %>%
      group_by(current) %>%
      summarize(count=sum(count)) %>%
      ungroup()
```

For visibility, six statute miles or better is by far the most predicted value:

```{r visibility_hist}
#| fig-cap: Histogram of Visibility
 print(
   ggplot(visibility_hist, aes(x=abs(current))) + 
     geom_histogram(aes(weight=count), breaks = (-1:24) / 4 + 1/8) +
     labs(title="Histogram of Visibility", x="Visibility, statute miles", y="Count") +
     theme_bw()
   )
```

In the geographic distribution, we are seeing good visibility out West.

```{r visibility_map}
#| fig-cap: Visibility by Location
visibility_avg <- lines %>% 
      filter(variable=="visibility") %>%
      group_by(aerodrome) %>%
      summarize(current=weighted.mean(current, count)) %>%
      ungroup() %>%
      left_join(stations, by=c("aerodrome")) %>%
      filter(substr(aerodrome, 1, 1)=="K" | substr(aerodrome, 1, 2)=="PA" | substr(aerodrome, 1, 2)=="PH") 


plot_usmap(fill="grey") +
  geom_sf(data=usmap_transform(visibility_avg, input_names = c("longitude", "latitude")),
             aes(colour=current)) +
  scale_colour_gradientn(colours = topo.colors(30)) +
  labs(title = "Mean Visibility by Location", colour="S. Miles")
```

The airports with the best visibility, by prediction (keeping in mind that the scale maxes out at 6, but not using the median since that would be just 6 for most aerodromes), are:

```{r visibility_max_stations}
#| tbl-cap: Aerodromes with the highest predicted visibility

kable(head(
  visibility_avg %>% 
  arrange(-current) %>% 
  rename(average_wind = current) %>% 
  select(aerodrome, name, average_wind)),
  col.names = c("Aerodrome", "Name", "Average visibility, sm"),
  digits = 4)
```

The two airports in the contiguous United States with the lowest predicted visibility are both directly on the Pacific coast:

```{r visibility_min_stations}
#| tbl-cap: Aerodromes with the lowest predicted visibility

kable(head(
  visibility_avg %>% 
  arrange(current) %>% 
  rename(average_wind = current) %>% 
  select(aerodrome, name, average_wind)),
  col.names = c("Aerodrome", "Name", "Average visibility, sm"),
  digits = 4)
```


{{< pagebreak >}}
### Autocorrelation

##### Overall

Since a change of visibility from 5 miles to 4.5 miles clearly is not the same as a change from 1 mile to 0.5 miles, we look at changes in the squre root of visibility.

Improvements in predicted visibility do not tend to get revised, but decreases
mostly get revised:

```{r visibility_autocorr, warning=FALSE}
#| fig-cap: Changes in predicted visibility vs. realization
visibility_autocorr <- lines %>%
  filter(variable=="visibility") %>%
  mutate(change_from_previous=sqrt(current)-sqrt(previous), change_to_final=sqrt(final)-sqrt(current)) %>%
  group_by(change_from_previous, change_to_final) %>%
  summarise(count=sum(count), .groups="drop")


print(
  ggplot(visibility_autocorr, aes(x=factor(round(change_from_previous,1), levels=(-20:20)/10), y=change_to_final, weight=count)) +
    geom_boxplot() +
    theme_bw() +
    labs(
      title="Changes in predicted visibility vs. realization",
      x="Change in predicted visibility, sqrt(statute miles)",
         y="Change from prediction to final value, sqrt(statute miles)") +
    geom_abline(slope=-0.1, intercept=2.1, linetype=4) +
    scale_x_discrete(breaks=c(-2,-1,0,1,2), drop=FALSE)
)

```

We see a significantly larger effect size for the reversion of decreases in predicted visbility than for increases:

```{r visbility_autocorr_lm}
visibility_autocorr <- visibility_autocorr %>%
  mutate(change_increase=pmax(change_from_previous, 0),
         change_decrease=pmin(change_from_previous, 0))

visibility_lm <- lm(change_to_final ~ change_increase + change_decrease + 0, weights = count, data=visibility_autocorr)
summary(visibility_lm)
```
{{< pagebreak >}}
#### By year

It appears that there is no significant change in autocorrelation patterns over the years:

```{r visibility_autocorr_year, warning=FALSE}
#| fig-cap: Changes in predicted visibility vs. realization by year
#| fig-width: 10
#| fig-height: 10
visibility_autocorr_year <- lines %>%
  filter(variable=="visibility") %>%
  mutate(change_from_previous=sqrt(current)-sqrt(previous), change_to_final=sqrt(final)-sqrt(current)) %>%
  group_by(year, change_from_previous, change_to_final) %>%
  summarise(count=sum(count), .groups="drop")


print(
  ggplot(visibility_autocorr_year, aes(x=factor(round(change_from_previous,1), levels=(-20:20)/10), y=change_to_final, weight=count)) +
    facet_wrap(~year) +
    geom_boxplot(outliers = FALSE) +
    theme_bw() +
    labs(
      title="Changes in predicted visibility vs. realization",
      x="Change in predicted visibility, sqrt(statute miles)",
         y="Change from prediction to final value, sqrt(statute miles)") +
    geom_abline(slope=-0.1, intercept=2.1, linetype=4) +
    scale_x_discrete(breaks=c(-2,-1,0,1,2), drop=FALSE)
)
```

{{< pagebreak >}}
##### By location

We break down the tendency of changes in predicted visibility to revert by aerodrome. Again, there are regional clusters whose meaning is not immediately obvious.

```{r visibility_autocorr_aerodrome_increase}
#| fig-cap: Reversion of Increases in Predicted Visibility by Aerodrome
#| fig-width: 5
#| fig-height: 3

visibility_autocorr_aerodrome <- lines %>%
  filter(variable=="visibility") %>%
  mutate(change_from_previous=sqrt(current)-sqrt(previous), change_to_final=sqrt(final)-sqrt(current)) %>%
  filter(change_from_previous!=0) %>%
  group_by(aerodrome, change_from_previous, change_to_final) %>%
  summarise(count=sum(count), .groups="drop") %>%
  mutate(change_increase=pmax(change_from_previous, 0),
         change_decrease=pmin(change_from_previous, 0)) %>%
  nest_by(aerodrome) %>%
  mutate(fitAerodrome = list(lm(change_to_final ~ change_increase + change_decrease + 0, weights = count, data = data))) %>%
  reframe(tidy(fitAerodrome)) %>%
  left_join(stations, by=c("aerodrome")) %>%
  filter(substr(aerodrome, 1, 1)=="K" | substr(aerodrome, 1, 2)=="PA" | substr(aerodrome, 1, 2)=="PH") 

plot_usmap(fill="grey") +
  geom_sf(data=usmap_transform(visibility_autocorr_aerodrome %>% filter(term=="change_increase"), input_names = c("longitude", "latitude")),
             aes(colour=-estimate)) +
  scale_colour_gradientn(colours = heat.colors(10)) +
  labs(title = "Reversion of Increases in Predicted Visibility", colour="Reversion")

```

```{r visibility_autocorr_aerodrome_decrease}
#| fig-cap: Reversion of Decreases in Predicted Visibility by Aerodrome
#| fig-width: 5
#| fig-height: 3


plot_usmap(fill="grey") +
  geom_sf(data=usmap_transform(visibility_autocorr_aerodrome %>% filter(term=="change_decrease"), input_names = c("longitude", "latitude")),
             aes(colour=-estimate)) +
  scale_colour_gradientn(colours = heat.colors(10)) +
  labs(title = "Reversion of Decreases in Predicted Visibility", colour="Reversion")
```
{{< pagebreak >}}
#### Reversion of predicted increases vs. decreases

For visibility, it appears there is indeed an anticorrelation between reversionary tendencies in changes to increases *vs.* decreases in predicted visibility.

```{r visibility_autocorr_aerodrome_increase_decrease}
#| fig-cap: Reversion of predicted decrease vs. increase of visibility by aerodrome

ggplot(
  visibility_autocorr_aerodrome %>%
    select(aerodrome, term, estimate) %>%
    pivot_wider(names_from = term, values_from = estimate),
  aes(x=-change_increase, y=-change_decrease, label=aerodrome)) +
  geom_text(size=I(2)) +
  theme_bw() +
  labs(title="Reversion of predicted decrease vs. increase of visibility by aerodrome",
       x="Reversion of predicted increase",
       y="Reversion of predicted decrease")

```



